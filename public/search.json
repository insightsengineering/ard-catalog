[
  {
    "objectID": "01-QCing.html",
    "href": "01-QCing.html",
    "title": "QCing tables with ARDs",
    "section": "",
    "text": "QCing rtables\nYou are likely familiar with the r packages developed by NEST for generating tables and graphs.\nA common practice to ensure quality control (QC) of the calculated statistics is double programming - submitting the same data in a different programmatic source to ensure the results align. Historically, these tables are compared to outputs produced by SAS statistical software. Here, we offer an alternative using the Analysis Results Datasets (ARDs). The CDISC Analysis Results Standard aims to facilitate automation, reproducibility, reusability, and traceability of analysis results data (ARD). The {cards} and {cardx} packages can be used to create these analysis datasets.\n\n\nRecommended QCing workflow\nBelow we provide an example workflow for QCing tables.\n\nGenerate a table using {chevron}\n\n\nShow the code\nlibrary(chevron)\n\n# Create a table using the chevron package \ndmt01 &lt;- chevron::run(dmt01, syn_data)\ndmt01\n\n\n                                       A: Drug X    B: Placebo   C: Combination   All Patients\n                                         (N=15)       (N=15)         (N=15)          (N=45)   \n  ————————————————————————————————————————————————————————————————————————————————————————————\n  Age (yr)                                                                                    \n    n                                      15           15             15              45     \n    Mean (SD)                          31.3 (5.3)   35.1 (9.0)     36.6 (6.4)      34.3 (7.3) \n    Median                                31.0         35.0           35.0            34.0    \n    Min - Max                           24 - 40      24 - 57        24 - 49         24 - 57   \n  Age Group                                                                                   \n    n                                      15           15             15              45     \n    &lt;65                                15 (100%)    15 (100%)      15 (100%)       45 (100%)  \n  Sex                                                                                         \n    n                                      15           15             15              45     \n    Male                               3 (20.0%)    7 (46.7%)      5 (33.3%)       15 (33.3%) \n    Female                             12 (80.0%)   8 (53.3%)      10 (66.7%)      30 (66.7%) \n  Ethnicity                                                                                   \n    n                                      15           15             15              45     \n    HISPANIC OR LATINO                 2 (13.3%)        0              0            2 (4.4%)  \n    NOT HISPANIC OR LATINO             13 (86.7%)   15 (100%)      13 (86.7%)      41 (91.1%) \n    NOT REPORTED                           0            0          2 (13.3%)        2 (4.4%)  \n  RACE                                                                                        \n    n                                      15           15             15              45     \n    AMERICAN INDIAN OR ALASKA NATIVE       0        2 (13.3%)       1 (6.7%)        3 (6.7%)  \n    ASIAN                              8 (53.3%)    10 (66.7%)     8 (53.3%)       26 (57.8%) \n    BLACK OR AFRICAN AMERICAN          4 (26.7%)     1 (6.7%)      4 (26.7%)       9 (20.0%)  \n    WHITE                              3 (20.0%)    2 (13.3%)      2 (13.3%)       7 (15.6%)  \n\n\n\n\nFlatten the table into a data.frame\nA rtables based output can be flattened into a data frame using the as_results_df() function from the rtables package. The make_ard argument set to TRUE, will format the data similar to the output generated by the {cards} package.\n\n\nShow the code\nresults &lt;- rtables::as_result_df(dmt01, make_ard = TRUE, expand_colnames = TRUE)\nresults[1:6, -c(1:3)]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroup2_level\nvariable\nvariable_level\nvariable_label\nstat_name\nstat\n\n\n\n\nA: Drug X\nAAGE\nn\nn\nn\n15.000000\n\n\nA: Drug X\nAAGE\nmean_sd\nMean (SD)\nmean\n31.333333\n\n\nA: Drug X\nAAGE\nmean_sd\nMean (SD)\nsd\n5.259911\n\n\nA: Drug X\nAAGE\nmedian\nMedian\nmedian\n31.000000\n\n\nA: Drug X\nAAGE\nrange\nMin - Max\nmin\n24.000000\n\n\nA: Drug X\nAAGE\nrange\nMin - Max\nmax\n40.000000\n\n\n\n\n\n\n\n\nCreate a comparable ARD\nUsing the {cards} package, we stack the functions ard_continuous() for the continuous variables and ard_categorical() for categorical variables. The default statistics calculated for each of these data types are included - these can be adapted for bespoke analyses.\n\n\nShow the code\nlibrary(cards)\n\n# build ARDs that calculate relevant statistics for continuous and categorical variables.\n\nards &lt;- ard_stack(syn_data$adsl, ard_continuous(variables = c(AGE), statistic = ~ continuous_summary_fns(c(\"N\", \"mean\", \"sd\", \"median\", \"min\", \"max\"))\n  ),\n                 ard_categorical(variables = c(AGEGR1, SEX, ETHNIC, RACE)),\n                 .by = \"ARM\",\n                 .overall = TRUE)\n\nards [1:6, -c(1,9:11)]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroup1_level\nvariable\nvariable_level\ncontext\nstat_name\nstat_label\nstat\n\n\n\n\n1\nAGE\nNULL\ncontinuous\nN\nN\n15\n\n\n1\nAGE\nNULL\ncontinuous\nmean\nMean\n31.33333\n\n\n1\nAGE\nNULL\ncontinuous\nsd\nSD\n5.259911\n\n\n1\nAGE\nNULL\ncontinuous\nmedian\nMedian\n31\n\n\n1\nAGE\nNULL\ncontinuous\nmin\nMin\n24\n\n\n1\nAGE\nNULL\ncontinuous\nmax\nMax\n40\n\n\n\n\n\n\n\n\nVisualize statistics comparison\nWith both data frames containing similar key variables (group_level, variable_label, etc.), statistics can be compared side-by-side by combining the tables.\n\n\nShow the code\n# rework the rtables output to match ----\n# rename the group2 to group1, rename stat_name from n to N\n\nreformat &lt;- results |&gt;\n  dplyr::select(-c(1:2,7)) |&gt;\n  dplyr::rename(\"group1\" = group2, \"group1_level\" = group2_level, \"stat_rtables\" = stat) |&gt;\n   dplyr::mutate(variable_level = sub(\"^[^.]*\\\\.\", \"\", variable_level)) |&gt;\n  dplyr::mutate(stat_name = dplyr::recode(stat_name, \n                         \"n\" = \"N\",\n                         \"count\" = \"n\"),\n                variable = dplyr::recode(variable, \n                         \"AAGE\" = \"AGE\"),\n                variable_level = dplyr::recode(variable_level, \n                         \"Male\" = \"M\",\n                         \"Female\" = \"F\")) |&gt;\n  dplyr::mutate(variable_level = dplyr::case_when(\n    variable_level %in% c(\"mean_sd\", \"median\", \"range\", \"n\") ~ NA_character_,\n    TRUE ~ variable_level\n  ))\n\nards2 &lt;- ards |&gt; \n  dplyr::mutate(group1_level = purrr::map_chr(group1_level, \n                                             ~ if (length(.x) &gt; 0) {\n                                               as.character(.x[[1]])\n                                             } else {\n                                               NA_character_\n                                             })) |&gt;\n    dplyr::mutate(variable_level = purrr::map_chr(variable_level, \n                                             ~ if (length(.x) &gt; 0) {\n                                               as.character(.x[[1]])\n                                             } else {\n                                               NA_character_\n                                             })) |&gt;\n  dplyr::select(-c(9:11)) |&gt;\n  dplyr::mutate(group1 = dplyr::coalesce(group1, \"ARM\"),\n                group1_level = dplyr::coalesce(group1_level, \"All Patients\"))\n\n# perform a left join\n\ncompare &lt;- dplyr::left_join(ards2, reformat, by = c(\"group1_level\",\"group1\", \"variable\", \"variable_level\", \"stat_name\"))\ncompare[1:20,]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroup1\ngroup1_level\nvariable\nvariable_level\ncontext\nstat_name\nstat_label\nstat\nstat_rtables\n\n\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nN\nN\n15\n15.000000\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nmean\nMean\n31.33333\n31.333333\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nsd\nSD\n5.259911\n5.259911\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nmedian\nMedian\n31\n31.000000\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nmin\nMin\n24\n24.000000\n\n\nARM\nA: Drug X\nAGE\nNA\ncontinuous\nmax\nMax\n40\n40.000000\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nN\nN\n15\n15.000000\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nmean\nMean\n35.06667\n35.066667\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nsd\nSD\n9.027471\n9.027471\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nmedian\nMedian\n35\n35.000000\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nmin\nMin\n24\n24.000000\n\n\nARM\nB: Placebo\nAGE\nNA\ncontinuous\nmax\nMax\n57\n57.000000\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nN\nN\n15\n15.000000\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nmean\nMean\n36.6\n36.600000\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nsd\nSD\n6.445375\n6.445375\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nmedian\nMedian\n35\n35.000000\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nmin\nMin\n24\n24.000000\n\n\nARM\nC: Combination\nAGE\nNA\ncontinuous\nmax\nMax\n49\n49.000000\n\n\nARM\nAll Patients\nAGE\nNA\ncontinuous\nN\nN\n45\n45.000000\n\n\nARM\nAll Patients\nAGE\nNA\ncontinuous\nmean\nMean\n34.33333\n34.333333\n\n\n\n\n\n\n\n\nCompare programmatically\nWith all stats aligned, functions such as all.equal() or identical can be used to verify if the stats produced are equivalent.\n\n\nShow the code\nna.omit(compare) %&gt;%\n  dplyr::mutate(columns_match = stat == stat_rtables)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroup1\ngroup1_level\nvariable\nvariable_level\ncontext\nstat_name\nstat_label\nstat\nstat_rtables\ncolumns_match\n\n\n\n\nARM\nA: Drug X\nAGEGR1\n&lt;65\ncategorical\nn\nn\n15\n15.0000000\nTRUE\n\n\nARM\nA: Drug X\nAGEGR1\n&lt;65\ncategorical\np\n%\n1\n1.0000000\nTRUE\n\n\nARM\nB: Placebo\nAGEGR1\n&lt;65\ncategorical\nn\nn\n15\n15.0000000\nTRUE\n\n\nARM\nB: Placebo\nAGEGR1\n&lt;65\ncategorical\np\n%\n1\n1.0000000\nTRUE\n\n\nARM\nC: Combination\nAGEGR1\n&lt;65\ncategorical\nn\nn\n15\n15.0000000\nTRUE\n\n\nARM\nC: Combination\nAGEGR1\n&lt;65\ncategorical\np\n%\n1\n1.0000000\nTRUE\n\n\nARM\nAll Patients\nAGEGR1\n&lt;65\ncategorical\nn\nn\n45\n45.0000000\nTRUE\n\n\nARM\nAll Patients\nAGEGR1\n&lt;65\ncategorical\np\n%\n1\n1.0000000\nTRUE\n\n\nARM\nA: Drug X\nSEX\nF\ncategorical\nn\nn\n12\n12.0000000\nTRUE\n\n\nARM\nA: Drug X\nSEX\nF\ncategorical\np\n%\n0.8\n0.8000000\nTRUE\n\n\nARM\nA: Drug X\nSEX\nM\ncategorical\nn\nn\n3\n3.0000000\nTRUE\n\n\nARM\nA: Drug X\nSEX\nM\ncategorical\np\n%\n0.2\n0.2000000\nTRUE\n\n\nARM\nB: Placebo\nSEX\nF\ncategorical\nn\nn\n8\n8.0000000\nTRUE\n\n\nARM\nB: Placebo\nSEX\nF\ncategorical\np\n%\n0.5333333\n0.5333333\nTRUE\n\n\nARM\nB: Placebo\nSEX\nM\ncategorical\nn\nn\n7\n7.0000000\nTRUE\n\n\nARM\nB: Placebo\nSEX\nM\ncategorical\np\n%\n0.4666667\n0.4666667\nTRUE\n\n\nARM\nC: Combination\nSEX\nF\ncategorical\nn\nn\n10\n10.0000000\nTRUE\n\n\nARM\nC: Combination\nSEX\nF\ncategorical\np\n%\n0.6666667\n0.6666667\nTRUE\n\n\nARM\nC: Combination\nSEX\nM\ncategorical\nn\nn\n5\n5.0000000\nTRUE\n\n\nARM\nC: Combination\nSEX\nM\ncategorical\np\n%\n0.3333333\n0.3333333\nTRUE\n\n\nARM\nAll Patients\nSEX\nF\ncategorical\nn\nn\n30\n30.0000000\nTRUE\n\n\nARM\nAll Patients\nSEX\nF\ncategorical\np\n%\n0.6666667\n0.6666667\nTRUE\n\n\nARM\nAll Patients\nSEX\nM\ncategorical\nn\nn\n15\n15.0000000\nTRUE\n\n\nARM\nAll Patients\nSEX\nM\ncategorical\np\n%\n0.3333333\n0.3333333\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nHISPANIC OR LATINO\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nHISPANIC OR LATINO\ncategorical\np\n%\n0.1333333\n0.1333333\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\nn\nn\n13\n13.0000000\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\np\n%\n0.8666667\n0.8666667\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nNOT REPORTED\ncategorical\nn\nn\n0\n0.0000000\nTRUE\n\n\nARM\nA: Drug X\nETHNIC\nNOT REPORTED\ncategorical\np\n%\n0\n0.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nHISPANIC OR LATINO\ncategorical\nn\nn\n0\n0.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nHISPANIC OR LATINO\ncategorical\np\n%\n0\n0.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\nn\nn\n15\n15.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\np\n%\n1\n1.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nNOT REPORTED\ncategorical\nn\nn\n0\n0.0000000\nTRUE\n\n\nARM\nB: Placebo\nETHNIC\nNOT REPORTED\ncategorical\np\n%\n0\n0.0000000\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nHISPANIC OR LATINO\ncategorical\nn\nn\n0\n0.0000000\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nHISPANIC OR LATINO\ncategorical\np\n%\n0\n0.0000000\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\nn\nn\n13\n13.0000000\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\np\n%\n0.8666667\n0.8666667\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nNOT REPORTED\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nC: Combination\nETHNIC\nNOT REPORTED\ncategorical\np\n%\n0.1333333\n0.1333333\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nHISPANIC OR LATINO\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nHISPANIC OR LATINO\ncategorical\np\n%\n0.04444444\n0.0444444\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\nn\nn\n41\n41.0000000\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nNOT HISPANIC OR LATINO\ncategorical\np\n%\n0.9111111\n0.9111111\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nNOT REPORTED\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nAll Patients\nETHNIC\nNOT REPORTED\ncategorical\np\n%\n0.04444444\n0.0444444\nTRUE\n\n\nARM\nA: Drug X\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\nn\nn\n0\n0.0000000\nTRUE\n\n\nARM\nA: Drug X\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\np\n%\n0\n0.0000000\nTRUE\n\n\nARM\nA: Drug X\nRACE\nASIAN\ncategorical\nn\nn\n8\n8.0000000\nTRUE\n\n\nARM\nA: Drug X\nRACE\nASIAN\ncategorical\np\n%\n0.5333333\n0.5333333\nTRUE\n\n\nARM\nA: Drug X\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\nn\nn\n4\n4.0000000\nTRUE\n\n\nARM\nA: Drug X\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\np\n%\n0.2666667\n0.2666667\nTRUE\n\n\nARM\nA: Drug X\nRACE\nWHITE\ncategorical\nn\nn\n3\n3.0000000\nTRUE\n\n\nARM\nA: Drug X\nRACE\nWHITE\ncategorical\np\n%\n0.2\n0.2000000\nTRUE\n\n\nARM\nB: Placebo\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nB: Placebo\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\np\n%\n0.1333333\n0.1333333\nTRUE\n\n\nARM\nB: Placebo\nRACE\nASIAN\ncategorical\nn\nn\n10\n10.0000000\nTRUE\n\n\nARM\nB: Placebo\nRACE\nASIAN\ncategorical\np\n%\n0.6666667\n0.6666667\nTRUE\n\n\nARM\nB: Placebo\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\nn\nn\n1\n1.0000000\nTRUE\n\n\nARM\nB: Placebo\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\np\n%\n0.06666667\n0.0666667\nTRUE\n\n\nARM\nB: Placebo\nRACE\nWHITE\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nB: Placebo\nRACE\nWHITE\ncategorical\np\n%\n0.1333333\n0.1333333\nTRUE\n\n\nARM\nC: Combination\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\nn\nn\n1\n1.0000000\nTRUE\n\n\nARM\nC: Combination\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\np\n%\n0.06666667\n0.0666667\nTRUE\n\n\nARM\nC: Combination\nRACE\nASIAN\ncategorical\nn\nn\n8\n8.0000000\nTRUE\n\n\nARM\nC: Combination\nRACE\nASIAN\ncategorical\np\n%\n0.5333333\n0.5333333\nTRUE\n\n\nARM\nC: Combination\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\nn\nn\n4\n4.0000000\nTRUE\n\n\nARM\nC: Combination\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\np\n%\n0.2666667\n0.2666667\nTRUE\n\n\nARM\nC: Combination\nRACE\nWHITE\ncategorical\nn\nn\n2\n2.0000000\nTRUE\n\n\nARM\nC: Combination\nRACE\nWHITE\ncategorical\np\n%\n0.1333333\n0.1333333\nTRUE\n\n\nARM\nAll Patients\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\nn\nn\n3\n3.0000000\nTRUE\n\n\nARM\nAll Patients\nRACE\nAMERICAN INDIAN OR ALASKA NATIVE\ncategorical\np\n%\n0.06666667\n0.0666667\nTRUE\n\n\nARM\nAll Patients\nRACE\nASIAN\ncategorical\nn\nn\n26\n26.0000000\nTRUE\n\n\nARM\nAll Patients\nRACE\nASIAN\ncategorical\np\n%\n0.5777778\n0.5777778\nTRUE\n\n\nARM\nAll Patients\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\nn\nn\n9\n9.0000000\nTRUE\n\n\nARM\nAll Patients\nRACE\nBLACK OR AFRICAN AMERICAN\ncategorical\np\n%\n0.2\n0.2000000\nTRUE\n\n\nARM\nAll Patients\nRACE\nWHITE\ncategorical\nn\nn\n7\n7.0000000\nTRUE\n\n\nARM\nAll Patients\nRACE\nWHITE\ncategorical\np\n%\n0.1555556\n0.1555556\nTRUE",
    "crumbs": [
      "QCing with ARDS"
    ]
  },
  {
    "objectID": "03-AET02.html",
    "href": "03-AET02.html",
    "title": "Adverse Events (AET02)",
    "section": "",
    "text": "In this example below we perform different data pre-processing for the different ARDs we want to create. We then generate separate ARDs for the different sections of the AET02 table and then merge them all together.\n\n\nShow the code\nlibrary(cards)\nlibrary(chevron)\n\n\nRegistered S3 method overwritten by 'tern':\n  method   from \n  tidy.glm broom\n\n\nShow the code\nadsl &lt;- syn_data$adsl\nadae &lt;- syn_data$adae |&gt;\n  dplyr::filter(AEBODSYS == 'cl A.1' | AEBODSYS == \"cl D.1\")\n\n\n# Keep only 1 record per patient\nadae_one_sub &lt;- adae %&gt;% \n  dplyr::filter(!duplicated(adae[c(\"USUBJID\")]))\n\n# Keep only 1 record per patient for each AEBODSYS\nadae_one_sub_aebod &lt;- adae %&gt;% \n  dplyr::filter(!duplicated(adae[c(\"USUBJID\", \"AEBODSYS\")]))\n\n\n# ----- ARDS -----\n# Total number of patients with at least one adverse event\ntot_pat_ae &lt;- ard_hierarchical(\n  data = adae_one_sub,\n  variables = c(SAFFL),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 1, scale = 100))) |&gt;\n  apply_fmt_fn() |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_pat_ae')\n\n# Total number of AEs \ntot_ae &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(SAFFL),\n  by = c(ARM),\n  denominator = adsl) |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_ae')\n\n# Total number of patients with at least one adverse event within each AEBODSYS\ntot_pat_ae_aebod &lt;- ard_hierarchical(\n  data = adae_one_sub_aebod,\n  variables = c(AEBODSYS),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 1, scale = 100))) |&gt;\n  apply_fmt_fn()|&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_pat_ae_aebod')\n\n# Total number of AEs for each AEBODSYS\ntot_ae_aebod &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(AEBODSYS),\n  by = c(ARM),\n  denominator = adsl) |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_ae_aebod')\n\n# Count and Percent for each AEDECOD within each AEBODSYS\nae_n_p_aedecod &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(AEBODSYS, AEDECOD),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 2, scale = 100))) |&gt; \n  apply_fmt_fn()|&gt; \n  shuffle_ard(trim = FALSE) |&gt; \n  dplyr::mutate(tbl_name = 'ae_n_p_aedecod ')\n\n# bind the ARDs\nfinal_aet02_ard &lt;- dplyr::bind_rows(tot_pat_ae, tot_ae, tot_pat_ae_aebod, tot_ae_aebod, ae_n_p_aedecod) |&gt; \n  as.data.frame() |&gt; \n  dplyr::select(-c(variable, context, warning, error))\n\nfinal_aet02_ard\n\n\n              ARM         label stat_name stat_label       stat stat_fmt\n1       A: Drug X             Y         n          n         10       10\n2       A: Drug X             Y         N          N         15       15\n3       A: Drug X             Y         p          %  0.6666667     66.7\n4      B: Placebo             Y         n          n         10       10\n5      B: Placebo             Y         N          N         15       15\n6      B: Placebo             Y         p          %  0.6666667     66.7\n7  C: Combination             Y         n          n         14       14\n8  C: Combination             Y         N          N         15       15\n9  C: Combination             Y         p          %  0.9333333     93.3\n10      A: Drug X             Y         n          n         21     NULL\n11      A: Drug X             Y         N          N         15     NULL\n12      A: Drug X             Y         p          %        1.4     NULL\n13     B: Placebo             Y         n          n         20     NULL\n14     B: Placebo             Y         N          N         15     NULL\n15     B: Placebo             Y         p          %   1.333333     NULL\n16 C: Combination             Y         n          n         35     NULL\n17 C: Combination             Y         N          N         15     NULL\n18 C: Combination             Y         p          %   2.333333     NULL\n19      A: Drug X        cl A.1         n          n          7        7\n20      A: Drug X        cl A.1         N          N         15       15\n21      A: Drug X        cl A.1         p          %  0.4666667     46.7\n22      A: Drug X        cl D.1         n          n          9        9\n23      A: Drug X        cl D.1         N          N         15       15\n24      A: Drug X        cl D.1         p          %        0.6     60.0\n25     B: Placebo        cl A.1         n          n          6        6\n26     B: Placebo        cl A.1         N          N         15       15\n27     B: Placebo        cl A.1         p          %        0.4     40.0\n28     B: Placebo        cl D.1         n          n          5        5\n29     B: Placebo        cl D.1         N          N         15       15\n30     B: Placebo        cl D.1         p          %  0.3333333     33.3\n31 C: Combination        cl A.1         n          n         10       10\n32 C: Combination        cl A.1         N          N         15       15\n33 C: Combination        cl A.1         p          %  0.6666667     66.7\n34 C: Combination        cl D.1         n          n         11       11\n35 C: Combination        cl D.1         N          N         15       15\n36 C: Combination        cl D.1         p          %  0.7333333     73.3\n37      A: Drug X        cl A.1         n          n          8     NULL\n38      A: Drug X        cl A.1         N          N         15     NULL\n39      A: Drug X        cl A.1         p          %  0.5333333     NULL\n40      A: Drug X        cl D.1         n          n         13     NULL\n41      A: Drug X        cl D.1         N          N         15     NULL\n42      A: Drug X        cl D.1         p          %  0.8666667     NULL\n43     B: Placebo        cl A.1         n          n         11     NULL\n44     B: Placebo        cl A.1         N          N         15     NULL\n45     B: Placebo        cl A.1         p          %  0.7333333     NULL\n46     B: Placebo        cl D.1         n          n          9     NULL\n47     B: Placebo        cl D.1         N          N         15     NULL\n48     B: Placebo        cl D.1         p          %        0.6     NULL\n49 C: Combination        cl A.1         n          n         16     NULL\n50 C: Combination        cl A.1         N          N         15     NULL\n51 C: Combination        cl A.1         p          %   1.066667     NULL\n52 C: Combination        cl D.1         n          n         19     NULL\n53 C: Combination        cl D.1         N          N         15     NULL\n54 C: Combination        cl D.1         p          %   1.266667     NULL\n55      A: Drug X dcd A.1.1.1.1         n          n          3        3\n56      A: Drug X dcd A.1.1.1.1         N          N         15       15\n57      A: Drug X dcd A.1.1.1.1         p          %        0.2    20.00\n58      A: Drug X dcd A.1.1.1.2         n          n          5        5\n59      A: Drug X dcd A.1.1.1.2         N          N         15       15\n60      A: Drug X dcd A.1.1.1.2         p          %  0.3333333    33.33\n61      A: Drug X dcd D.1.1.1.1         n          n          5        5\n62      A: Drug X dcd D.1.1.1.1         N          N         15       15\n63      A: Drug X dcd D.1.1.1.1         p          %  0.3333333    33.33\n64      A: Drug X dcd D.1.1.4.2         n          n          8        8\n65      A: Drug X dcd D.1.1.4.2         N          N         15       15\n66      A: Drug X dcd D.1.1.4.2         p          %  0.5333333    53.33\n67     B: Placebo dcd A.1.1.1.1         n          n          1        1\n68     B: Placebo dcd A.1.1.1.1         N          N         15       15\n69     B: Placebo dcd A.1.1.1.1         p          % 0.06666667     6.67\n70     B: Placebo dcd A.1.1.1.2         n          n         10       10\n71     B: Placebo dcd A.1.1.1.2         N          N         15       15\n72     B: Placebo dcd A.1.1.1.2         p          %  0.6666667    66.67\n73     B: Placebo dcd D.1.1.1.1         n          n          7        7\n74     B: Placebo dcd D.1.1.1.1         N          N         15       15\n75     B: Placebo dcd D.1.1.1.1         p          %  0.4666667    46.67\n76     B: Placebo dcd D.1.1.4.2         n          n          2        2\n77     B: Placebo dcd D.1.1.4.2         N          N         15       15\n78     B: Placebo dcd D.1.1.4.2         p          %  0.1333333    13.33\n79 C: Combination dcd A.1.1.1.1         n          n          7        7\n80 C: Combination dcd A.1.1.1.1         N          N         15       15\n81 C: Combination dcd A.1.1.1.1         p          %  0.4666667    46.67\n82 C: Combination dcd A.1.1.1.2         n          n          9        9\n83 C: Combination dcd A.1.1.1.2         N          N         15       15\n84 C: Combination dcd A.1.1.1.2         p          %        0.6    60.00\n85 C: Combination dcd D.1.1.1.1         n          n         11       11\n86 C: Combination dcd D.1.1.1.1         N          N         15       15\n87 C: Combination dcd D.1.1.1.1         p          %  0.7333333    73.33\n88 C: Combination dcd D.1.1.4.2         n          n          8        8\n89 C: Combination dcd D.1.1.4.2         N          N         15       15\n90 C: Combination dcd D.1.1.4.2         p          %  0.5333333    53.33\n                                                                                                                                                                                                                                                                                                                   fmt_fn\n1                                                                                                                                                                                                                                                                                                                       0\n2                                                                                                                                                                                                                                                                                                                       0\n3  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n4                                                                                                                                                                                                                                                                                                                       0\n5                                                                                                                                                                                                                                                                                                                       0\n6  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n7                                                                                                                                                                                                                                                                                                                       0\n8                                                                                                                                                                                                                                                                                                                       0\n9  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n10                                                                                                                                                                                                                                                                                                                      0\n11                                                                                                                                                                                                                                                                                                                      0\n12 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n13                                                                                                                                                                                                                                                                                                                      0\n14                                                                                                                                                                                                                                                                                                                      0\n15 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n16                                                                                                                                                                                                                                                                                                                      0\n17                                                                                                                                                                                                                                                                                                                      0\n18 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n19                                                                                                                                                                                                                                                                                                                      0\n20                                                                                                                                                                                                                                                                                                                      0\n21 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n22                                                                                                                                                                                                                                                                                                                      0\n23                                                                                                                                                                                                                                                                                                                      0\n24 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n25                                                                                                                                                                                                                                                                                                                      0\n26                                                                                                                                                                                                                                                                                                                      0\n27 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n28                                                                                                                                                                                                                                                                                                                      0\n29                                                                                                                                                                                                                                                                                                                      0\n30 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n31                                                                                                                                                                                                                                                                                                                      0\n32                                                                                                                                                                                                                                                                                                                      0\n33 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n34                                                                                                                                                                                                                                                                                                                      0\n35                                                                                                                                                                                                                                                                                                                      0\n36 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n37                                                                                                                                                                                                                                                                                                                      0\n38                                                                                                                                                                                                                                                                                                                      0\n39 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n40                                                                                                                                                                                                                                                                                                                      0\n41                                                                                                                                                                                                                                                                                                                      0\n42 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n43                                                                                                                                                                                                                                                                                                                      0\n44                                                                                                                                                                                                                                                                                                                      0\n45 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n46                                                                                                                                                                                                                                                                                                                      0\n47                                                                                                                                                                                                                                                                                                                      0\n48 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n49                                                                                                                                                                                                                                                                                                                      0\n50                                                                                                                                                                                                                                                                                                                      0\n51 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n52                                                                                                                                                                                                                                                                                                                      0\n53                                                                                                                                                                                                                                                                                                                      0\n54 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n55                                                                                                                                                                                                                                                                                                                      0\n56                                                                                                                                                                                                                                                                                                                      0\n57 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n58                                                                                                                                                                                                                                                                                                                      0\n59                                                                                                                                                                                                                                                                                                                      0\n60 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n61                                                                                                                                                                                                                                                                                                                      0\n62                                                                                                                                                                                                                                                                                                                      0\n63 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n64                                                                                                                                                                                                                                                                                                                      0\n65                                                                                                                                                                                                                                                                                                                      0\n66 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n67                                                                                                                                                                                                                                                                                                                      0\n68                                                                                                                                                                                                                                                                                                                      0\n69 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n70                                                                                                                                                                                                                                                                                                                      0\n71                                                                                                                                                                                                                                                                                                                      0\n72 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n73                                                                                                                                                                                                                                                                                                                      0\n74                                                                                                                                                                                                                                                                                                                      0\n75 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n76                                                                                                                                                                                                                                                                                                                      0\n77                                                                                                                                                                                                                                                                                                                      0\n78 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n79                                                                                                                                                                                                                                                                                                                      0\n80                                                                                                                                                                                                                                                                                                                      0\n81 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n82                                                                                                                                                                                                                                                                                                                      0\n83                                                                                                                                                                                                                                                                                                                      0\n84 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n85                                                                                                                                                                                                                                                                                                                      0\n86                                                                                                                                                                                                                                                                                                                      0\n87 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n88                                                                                                                                                                                                                                                                                                                      0\n89                                                                                                                                                                                                                                                                                                                      0\n90 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n           tbl_name AEBODSYS\n1        tot_pat_ae     &lt;NA&gt;\n2        tot_pat_ae     &lt;NA&gt;\n3        tot_pat_ae     &lt;NA&gt;\n4        tot_pat_ae     &lt;NA&gt;\n5        tot_pat_ae     &lt;NA&gt;\n6        tot_pat_ae     &lt;NA&gt;\n7        tot_pat_ae     &lt;NA&gt;\n8        tot_pat_ae     &lt;NA&gt;\n9        tot_pat_ae     &lt;NA&gt;\n10           tot_ae     &lt;NA&gt;\n11           tot_ae     &lt;NA&gt;\n12           tot_ae     &lt;NA&gt;\n13           tot_ae     &lt;NA&gt;\n14           tot_ae     &lt;NA&gt;\n15           tot_ae     &lt;NA&gt;\n16           tot_ae     &lt;NA&gt;\n17           tot_ae     &lt;NA&gt;\n18           tot_ae     &lt;NA&gt;\n19 tot_pat_ae_aebod     &lt;NA&gt;\n20 tot_pat_ae_aebod     &lt;NA&gt;\n21 tot_pat_ae_aebod     &lt;NA&gt;\n22 tot_pat_ae_aebod     &lt;NA&gt;\n23 tot_pat_ae_aebod     &lt;NA&gt;\n24 tot_pat_ae_aebod     &lt;NA&gt;\n25 tot_pat_ae_aebod     &lt;NA&gt;\n26 tot_pat_ae_aebod     &lt;NA&gt;\n27 tot_pat_ae_aebod     &lt;NA&gt;\n28 tot_pat_ae_aebod     &lt;NA&gt;\n29 tot_pat_ae_aebod     &lt;NA&gt;\n30 tot_pat_ae_aebod     &lt;NA&gt;\n31 tot_pat_ae_aebod     &lt;NA&gt;\n32 tot_pat_ae_aebod     &lt;NA&gt;\n33 tot_pat_ae_aebod     &lt;NA&gt;\n34 tot_pat_ae_aebod     &lt;NA&gt;\n35 tot_pat_ae_aebod     &lt;NA&gt;\n36 tot_pat_ae_aebod     &lt;NA&gt;\n37     tot_ae_aebod     &lt;NA&gt;\n38     tot_ae_aebod     &lt;NA&gt;\n39     tot_ae_aebod     &lt;NA&gt;\n40     tot_ae_aebod     &lt;NA&gt;\n41     tot_ae_aebod     &lt;NA&gt;\n42     tot_ae_aebod     &lt;NA&gt;\n43     tot_ae_aebod     &lt;NA&gt;\n44     tot_ae_aebod     &lt;NA&gt;\n45     tot_ae_aebod     &lt;NA&gt;\n46     tot_ae_aebod     &lt;NA&gt;\n47     tot_ae_aebod     &lt;NA&gt;\n48     tot_ae_aebod     &lt;NA&gt;\n49     tot_ae_aebod     &lt;NA&gt;\n50     tot_ae_aebod     &lt;NA&gt;\n51     tot_ae_aebod     &lt;NA&gt;\n52     tot_ae_aebod     &lt;NA&gt;\n53     tot_ae_aebod     &lt;NA&gt;\n54     tot_ae_aebod     &lt;NA&gt;\n55  ae_n_p_aedecod    cl A.1\n56  ae_n_p_aedecod    cl A.1\n57  ae_n_p_aedecod    cl A.1\n58  ae_n_p_aedecod    cl A.1\n59  ae_n_p_aedecod    cl A.1\n60  ae_n_p_aedecod    cl A.1\n61  ae_n_p_aedecod    cl D.1\n62  ae_n_p_aedecod    cl D.1\n63  ae_n_p_aedecod    cl D.1\n64  ae_n_p_aedecod    cl D.1\n65  ae_n_p_aedecod    cl D.1\n66  ae_n_p_aedecod    cl D.1\n67  ae_n_p_aedecod    cl A.1\n68  ae_n_p_aedecod    cl A.1\n69  ae_n_p_aedecod    cl A.1\n70  ae_n_p_aedecod    cl A.1\n71  ae_n_p_aedecod    cl A.1\n72  ae_n_p_aedecod    cl A.1\n73  ae_n_p_aedecod    cl D.1\n74  ae_n_p_aedecod    cl D.1\n75  ae_n_p_aedecod    cl D.1\n76  ae_n_p_aedecod    cl D.1\n77  ae_n_p_aedecod    cl D.1\n78  ae_n_p_aedecod    cl D.1\n79  ae_n_p_aedecod    cl A.1\n80  ae_n_p_aedecod    cl A.1\n81  ae_n_p_aedecod    cl A.1\n82  ae_n_p_aedecod    cl A.1\n83  ae_n_p_aedecod    cl A.1\n84  ae_n_p_aedecod    cl A.1\n85  ae_n_p_aedecod    cl D.1\n86  ae_n_p_aedecod    cl D.1\n87  ae_n_p_aedecod    cl D.1\n88  ae_n_p_aedecod    cl D.1\n89  ae_n_p_aedecod    cl D.1\n90  ae_n_p_aedecod    cl D.1",
    "crumbs": [
      "ard-catalog",
      "Adverse Events Table"
    ]
  },
  {
    "objectID": "03-AET02.html#calculaing-aet02-statistics-using-the-cards-package",
    "href": "03-AET02.html#calculaing-aet02-statistics-using-the-cards-package",
    "title": "Adverse Events (AET02)",
    "section": "",
    "text": "In this example below we perform different data pre-processing for the different ARDs we want to create. We then generate separate ARDs for the different sections of the AET02 table and then merge them all together.\n\n\nShow the code\nlibrary(cards)\nlibrary(chevron)\n\n\nRegistered S3 method overwritten by 'tern':\n  method   from \n  tidy.glm broom\n\n\nShow the code\nadsl &lt;- syn_data$adsl\nadae &lt;- syn_data$adae |&gt;\n  dplyr::filter(AEBODSYS == 'cl A.1' | AEBODSYS == \"cl D.1\")\n\n\n# Keep only 1 record per patient\nadae_one_sub &lt;- adae %&gt;% \n  dplyr::filter(!duplicated(adae[c(\"USUBJID\")]))\n\n# Keep only 1 record per patient for each AEBODSYS\nadae_one_sub_aebod &lt;- adae %&gt;% \n  dplyr::filter(!duplicated(adae[c(\"USUBJID\", \"AEBODSYS\")]))\n\n\n# ----- ARDS -----\n# Total number of patients with at least one adverse event\ntot_pat_ae &lt;- ard_hierarchical(\n  data = adae_one_sub,\n  variables = c(SAFFL),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 1, scale = 100))) |&gt;\n  apply_fmt_fn() |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_pat_ae')\n\n# Total number of AEs \ntot_ae &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(SAFFL),\n  by = c(ARM),\n  denominator = adsl) |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_ae')\n\n# Total number of patients with at least one adverse event within each AEBODSYS\ntot_pat_ae_aebod &lt;- ard_hierarchical(\n  data = adae_one_sub_aebod,\n  variables = c(AEBODSYS),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 1, scale = 100))) |&gt;\n  apply_fmt_fn()|&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_pat_ae_aebod')\n\n# Total number of AEs for each AEBODSYS\ntot_ae_aebod &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(AEBODSYS),\n  by = c(ARM),\n  denominator = adsl) |&gt; \n  shuffle_ard(trim = FALSE) |&gt;\n  dplyr::mutate(tbl_name = 'tot_ae_aebod')\n\n# Count and Percent for each AEDECOD within each AEBODSYS\nae_n_p_aedecod &lt;- ard_hierarchical(\n  data = adae,\n  variables = c(AEBODSYS, AEDECOD),\n  by = c(ARM),\n  denominator = adsl,\n  fmt_fn = ~ list(p = label_cards(digits = 2, scale = 100))) |&gt; \n  apply_fmt_fn()|&gt; \n  shuffle_ard(trim = FALSE) |&gt; \n  dplyr::mutate(tbl_name = 'ae_n_p_aedecod ')\n\n# bind the ARDs\nfinal_aet02_ard &lt;- dplyr::bind_rows(tot_pat_ae, tot_ae, tot_pat_ae_aebod, tot_ae_aebod, ae_n_p_aedecod) |&gt; \n  as.data.frame() |&gt; \n  dplyr::select(-c(variable, context, warning, error))\n\nfinal_aet02_ard\n\n\n              ARM         label stat_name stat_label       stat stat_fmt\n1       A: Drug X             Y         n          n         10       10\n2       A: Drug X             Y         N          N         15       15\n3       A: Drug X             Y         p          %  0.6666667     66.7\n4      B: Placebo             Y         n          n         10       10\n5      B: Placebo             Y         N          N         15       15\n6      B: Placebo             Y         p          %  0.6666667     66.7\n7  C: Combination             Y         n          n         14       14\n8  C: Combination             Y         N          N         15       15\n9  C: Combination             Y         p          %  0.9333333     93.3\n10      A: Drug X             Y         n          n         21     NULL\n11      A: Drug X             Y         N          N         15     NULL\n12      A: Drug X             Y         p          %        1.4     NULL\n13     B: Placebo             Y         n          n         20     NULL\n14     B: Placebo             Y         N          N         15     NULL\n15     B: Placebo             Y         p          %   1.333333     NULL\n16 C: Combination             Y         n          n         35     NULL\n17 C: Combination             Y         N          N         15     NULL\n18 C: Combination             Y         p          %   2.333333     NULL\n19      A: Drug X        cl A.1         n          n          7        7\n20      A: Drug X        cl A.1         N          N         15       15\n21      A: Drug X        cl A.1         p          %  0.4666667     46.7\n22      A: Drug X        cl D.1         n          n          9        9\n23      A: Drug X        cl D.1         N          N         15       15\n24      A: Drug X        cl D.1         p          %        0.6     60.0\n25     B: Placebo        cl A.1         n          n          6        6\n26     B: Placebo        cl A.1         N          N         15       15\n27     B: Placebo        cl A.1         p          %        0.4     40.0\n28     B: Placebo        cl D.1         n          n          5        5\n29     B: Placebo        cl D.1         N          N         15       15\n30     B: Placebo        cl D.1         p          %  0.3333333     33.3\n31 C: Combination        cl A.1         n          n         10       10\n32 C: Combination        cl A.1         N          N         15       15\n33 C: Combination        cl A.1         p          %  0.6666667     66.7\n34 C: Combination        cl D.1         n          n         11       11\n35 C: Combination        cl D.1         N          N         15       15\n36 C: Combination        cl D.1         p          %  0.7333333     73.3\n37      A: Drug X        cl A.1         n          n          8     NULL\n38      A: Drug X        cl A.1         N          N         15     NULL\n39      A: Drug X        cl A.1         p          %  0.5333333     NULL\n40      A: Drug X        cl D.1         n          n         13     NULL\n41      A: Drug X        cl D.1         N          N         15     NULL\n42      A: Drug X        cl D.1         p          %  0.8666667     NULL\n43     B: Placebo        cl A.1         n          n         11     NULL\n44     B: Placebo        cl A.1         N          N         15     NULL\n45     B: Placebo        cl A.1         p          %  0.7333333     NULL\n46     B: Placebo        cl D.1         n          n          9     NULL\n47     B: Placebo        cl D.1         N          N         15     NULL\n48     B: Placebo        cl D.1         p          %        0.6     NULL\n49 C: Combination        cl A.1         n          n         16     NULL\n50 C: Combination        cl A.1         N          N         15     NULL\n51 C: Combination        cl A.1         p          %   1.066667     NULL\n52 C: Combination        cl D.1         n          n         19     NULL\n53 C: Combination        cl D.1         N          N         15     NULL\n54 C: Combination        cl D.1         p          %   1.266667     NULL\n55      A: Drug X dcd A.1.1.1.1         n          n          3        3\n56      A: Drug X dcd A.1.1.1.1         N          N         15       15\n57      A: Drug X dcd A.1.1.1.1         p          %        0.2    20.00\n58      A: Drug X dcd A.1.1.1.2         n          n          5        5\n59      A: Drug X dcd A.1.1.1.2         N          N         15       15\n60      A: Drug X dcd A.1.1.1.2         p          %  0.3333333    33.33\n61      A: Drug X dcd D.1.1.1.1         n          n          5        5\n62      A: Drug X dcd D.1.1.1.1         N          N         15       15\n63      A: Drug X dcd D.1.1.1.1         p          %  0.3333333    33.33\n64      A: Drug X dcd D.1.1.4.2         n          n          8        8\n65      A: Drug X dcd D.1.1.4.2         N          N         15       15\n66      A: Drug X dcd D.1.1.4.2         p          %  0.5333333    53.33\n67     B: Placebo dcd A.1.1.1.1         n          n          1        1\n68     B: Placebo dcd A.1.1.1.1         N          N         15       15\n69     B: Placebo dcd A.1.1.1.1         p          % 0.06666667     6.67\n70     B: Placebo dcd A.1.1.1.2         n          n         10       10\n71     B: Placebo dcd A.1.1.1.2         N          N         15       15\n72     B: Placebo dcd A.1.1.1.2         p          %  0.6666667    66.67\n73     B: Placebo dcd D.1.1.1.1         n          n          7        7\n74     B: Placebo dcd D.1.1.1.1         N          N         15       15\n75     B: Placebo dcd D.1.1.1.1         p          %  0.4666667    46.67\n76     B: Placebo dcd D.1.1.4.2         n          n          2        2\n77     B: Placebo dcd D.1.1.4.2         N          N         15       15\n78     B: Placebo dcd D.1.1.4.2         p          %  0.1333333    13.33\n79 C: Combination dcd A.1.1.1.1         n          n          7        7\n80 C: Combination dcd A.1.1.1.1         N          N         15       15\n81 C: Combination dcd A.1.1.1.1         p          %  0.4666667    46.67\n82 C: Combination dcd A.1.1.1.2         n          n          9        9\n83 C: Combination dcd A.1.1.1.2         N          N         15       15\n84 C: Combination dcd A.1.1.1.2         p          %        0.6    60.00\n85 C: Combination dcd D.1.1.1.1         n          n         11       11\n86 C: Combination dcd D.1.1.1.1         N          N         15       15\n87 C: Combination dcd D.1.1.1.1         p          %  0.7333333    73.33\n88 C: Combination dcd D.1.1.4.2         n          n          8        8\n89 C: Combination dcd D.1.1.4.2         N          N         15       15\n90 C: Combination dcd D.1.1.4.2         p          %  0.5333333    53.33\n                                                                                                                                                                                                                                                                                                                   fmt_fn\n1                                                                                                                                                                                                                                                                                                                       0\n2                                                                                                                                                                                                                                                                                                                       0\n3  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n4                                                                                                                                                                                                                                                                                                                       0\n5                                                                                                                                                                                                                                                                                                                       0\n6  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n7                                                                                                                                                                                                                                                                                                                       0\n8                                                                                                                                                                                                                                                                                                                       0\n9  function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n10                                                                                                                                                                                                                                                                                                                      0\n11                                                                                                                                                                                                                                                                                                                      0\n12 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n13                                                                                                                                                                                                                                                                                                                      0\n14                                                                                                                                                                                                                                                                                                                      0\n15 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n16                                                                                                                                                                                                                                                                                                                      0\n17                                                                                                                                                                                                                                                                                                                      0\n18 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n19                                                                                                                                                                                                                                                                                                                      0\n20                                                                                                                                                                                                                                                                                                                      0\n21 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n22                                                                                                                                                                                                                                                                                                                      0\n23                                                                                                                                                                                                                                                                                                                      0\n24 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n25                                                                                                                                                                                                                                                                                                                      0\n26                                                                                                                                                                                                                                                                                                                      0\n27 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n28                                                                                                                                                                                                                                                                                                                      0\n29                                                                                                                                                                                                                                                                                                                      0\n30 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n31                                                                                                                                                                                                                                                                                                                      0\n32                                                                                                                                                                                                                                                                                                                      0\n33 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n34                                                                                                                                                                                                                                                                                                                      0\n35                                                                                                                                                                                                                                                                                                                      0\n36 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n37                                                                                                                                                                                                                                                                                                                      0\n38                                                                                                                                                                                                                                                                                                                      0\n39 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n40                                                                                                                                                                                                                                                                                                                      0\n41                                                                                                                                                                                                                                                                                                                      0\n42 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n43                                                                                                                                                                                                                                                                                                                      0\n44                                                                                                                                                                                                                                                                                                                      0\n45 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n46                                                                                                                                                                                                                                                                                                                      0\n47                                                                                                                                                                                                                                                                                                                      0\n48 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n49                                                                                                                                                                                                                                                                                                                      0\n50                                                                                                                                                                                                                                                                                                                      0\n51 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n52                                                                                                                                                                                                                                                                                                                      0\n53                                                                                                                                                                                                                                                                                                                      0\n54 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n55                                                                                                                                                                                                                                                                                                                      0\n56                                                                                                                                                                                                                                                                                                                      0\n57 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n58                                                                                                                                                                                                                                                                                                                      0\n59                                                                                                                                                                                                                                                                                                                      0\n60 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n61                                                                                                                                                                                                                                                                                                                      0\n62                                                                                                                                                                                                                                                                                                                      0\n63 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n64                                                                                                                                                                                                                                                                                                                      0\n65                                                                                                                                                                                                                                                                                                                      0\n66 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n67                                                                                                                                                                                                                                                                                                                      0\n68                                                                                                                                                                                                                                                                                                                      0\n69 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n70                                                                                                                                                                                                                                                                                                                      0\n71                                                                                                                                                                                                                                                                                                                      0\n72 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n73                                                                                                                                                                                                                                                                                                                      0\n74                                                                                                                                                                                                                                                                                                                      0\n75 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n76                                                                                                                                                                                                                                                                                                                      0\n77                                                                                                                                                                                                                                                                                                                      0\n78 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n79                                                                                                                                                                                                                                                                                                                      0\n80                                                                                                                                                                                                                                                                                                                      0\n81 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n82                                                                                                                                                                                                                                                                                                                      0\n83                                                                                                                                                                                                                                                                                                                      0\n84 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n85                                                                                                                                                                                                                                                                                                                      0\n86                                                                                                                                                                                                                                                                                                                      0\n87 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n88                                                                                                                                                                                                                                                                                                                      0\n89                                                                                                                                                                                                                                                                                                                      0\n90 function (x) , {,     res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * ,         scale, digits = digits), nsmall = digits))),     if (!is.null(width)) {,         res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, ,             paste0(strrep(\" \", width - nchar(res)), res)),     },     res, }\n           tbl_name AEBODSYS\n1        tot_pat_ae     &lt;NA&gt;\n2        tot_pat_ae     &lt;NA&gt;\n3        tot_pat_ae     &lt;NA&gt;\n4        tot_pat_ae     &lt;NA&gt;\n5        tot_pat_ae     &lt;NA&gt;\n6        tot_pat_ae     &lt;NA&gt;\n7        tot_pat_ae     &lt;NA&gt;\n8        tot_pat_ae     &lt;NA&gt;\n9        tot_pat_ae     &lt;NA&gt;\n10           tot_ae     &lt;NA&gt;\n11           tot_ae     &lt;NA&gt;\n12           tot_ae     &lt;NA&gt;\n13           tot_ae     &lt;NA&gt;\n14           tot_ae     &lt;NA&gt;\n15           tot_ae     &lt;NA&gt;\n16           tot_ae     &lt;NA&gt;\n17           tot_ae     &lt;NA&gt;\n18           tot_ae     &lt;NA&gt;\n19 tot_pat_ae_aebod     &lt;NA&gt;\n20 tot_pat_ae_aebod     &lt;NA&gt;\n21 tot_pat_ae_aebod     &lt;NA&gt;\n22 tot_pat_ae_aebod     &lt;NA&gt;\n23 tot_pat_ae_aebod     &lt;NA&gt;\n24 tot_pat_ae_aebod     &lt;NA&gt;\n25 tot_pat_ae_aebod     &lt;NA&gt;\n26 tot_pat_ae_aebod     &lt;NA&gt;\n27 tot_pat_ae_aebod     &lt;NA&gt;\n28 tot_pat_ae_aebod     &lt;NA&gt;\n29 tot_pat_ae_aebod     &lt;NA&gt;\n30 tot_pat_ae_aebod     &lt;NA&gt;\n31 tot_pat_ae_aebod     &lt;NA&gt;\n32 tot_pat_ae_aebod     &lt;NA&gt;\n33 tot_pat_ae_aebod     &lt;NA&gt;\n34 tot_pat_ae_aebod     &lt;NA&gt;\n35 tot_pat_ae_aebod     &lt;NA&gt;\n36 tot_pat_ae_aebod     &lt;NA&gt;\n37     tot_ae_aebod     &lt;NA&gt;\n38     tot_ae_aebod     &lt;NA&gt;\n39     tot_ae_aebod     &lt;NA&gt;\n40     tot_ae_aebod     &lt;NA&gt;\n41     tot_ae_aebod     &lt;NA&gt;\n42     tot_ae_aebod     &lt;NA&gt;\n43     tot_ae_aebod     &lt;NA&gt;\n44     tot_ae_aebod     &lt;NA&gt;\n45     tot_ae_aebod     &lt;NA&gt;\n46     tot_ae_aebod     &lt;NA&gt;\n47     tot_ae_aebod     &lt;NA&gt;\n48     tot_ae_aebod     &lt;NA&gt;\n49     tot_ae_aebod     &lt;NA&gt;\n50     tot_ae_aebod     &lt;NA&gt;\n51     tot_ae_aebod     &lt;NA&gt;\n52     tot_ae_aebod     &lt;NA&gt;\n53     tot_ae_aebod     &lt;NA&gt;\n54     tot_ae_aebod     &lt;NA&gt;\n55  ae_n_p_aedecod    cl A.1\n56  ae_n_p_aedecod    cl A.1\n57  ae_n_p_aedecod    cl A.1\n58  ae_n_p_aedecod    cl A.1\n59  ae_n_p_aedecod    cl A.1\n60  ae_n_p_aedecod    cl A.1\n61  ae_n_p_aedecod    cl D.1\n62  ae_n_p_aedecod    cl D.1\n63  ae_n_p_aedecod    cl D.1\n64  ae_n_p_aedecod    cl D.1\n65  ae_n_p_aedecod    cl D.1\n66  ae_n_p_aedecod    cl D.1\n67  ae_n_p_aedecod    cl A.1\n68  ae_n_p_aedecod    cl A.1\n69  ae_n_p_aedecod    cl A.1\n70  ae_n_p_aedecod    cl A.1\n71  ae_n_p_aedecod    cl A.1\n72  ae_n_p_aedecod    cl A.1\n73  ae_n_p_aedecod    cl D.1\n74  ae_n_p_aedecod    cl D.1\n75  ae_n_p_aedecod    cl D.1\n76  ae_n_p_aedecod    cl D.1\n77  ae_n_p_aedecod    cl D.1\n78  ae_n_p_aedecod    cl D.1\n79  ae_n_p_aedecod    cl A.1\n80  ae_n_p_aedecod    cl A.1\n81  ae_n_p_aedecod    cl A.1\n82  ae_n_p_aedecod    cl A.1\n83  ae_n_p_aedecod    cl A.1\n84  ae_n_p_aedecod    cl A.1\n85  ae_n_p_aedecod    cl D.1\n86  ae_n_p_aedecod    cl D.1\n87  ae_n_p_aedecod    cl D.1\n88  ae_n_p_aedecod    cl D.1\n89  ae_n_p_aedecod    cl D.1\n90  ae_n_p_aedecod    cl D.1",
    "crumbs": [
      "ard-catalog",
      "Adverse Events Table"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "QCing with {cards} and {cardx}",
    "section": "",
    "text": "QCing with {cards} and {cardx}\nThis catalog is meant to demo the use of ARD-centric packages within the Quality Control workflow. Verification of statistics generated with NEST packages (such as: {tern}, {rtables}, {chevron}) can be verified by reproducing the tables using Analysis Results Dataset (ARDs)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Utilizing the {cards} and {cardx} packages in the QC Workflow",
    "section": "",
    "text": "Overview\nThe current procedure for generating clinical reporting tables employs NEST packages such as {rtables}, {tern} and {chevron}. These packages create complex table structures and generate statistics that should be programmatically compared.\nIn this document, we will showcase how the {cards} and {cardx} packages can be used to QC common outputs generated using NEST packages.\n {cards}\n {rtables}\n {tern}\n {chevron}",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "02-DMT01.html#calculating-dmt01-statstics-using-the-cards-package",
    "href": "02-DMT01.html#calculating-dmt01-statstics-using-the-cards-package",
    "title": "Demographics and Baseline Characteristics (DMT01)",
    "section": "Calculating DMT01 statstics using the {cards} package",
    "text": "Calculating DMT01 statstics using the {cards} package\nIn this example below, we calculate the same summary statistics usings the {cards} package with the same data set provided by the {chevron} package.\n\n\nShow the code\nlibrary(cards)\nlibrary(chevron)\n\n\nRegistered S3 method overwritten by 'tern':\n  method   from \n  tidy.glm broom\n\n\nShow the code\n# build ARDs that calculate relevant statistics for continuous and categorical variables.\n\nards &lt;- ard_stack(syn_data$adsl, ard_continuous(variables = c(AGE)),\n                 ard_categorical(variables = c(AGEGR1, SEX, ETHNIC, RACE)),\n                 .by = \"ARM\",\n                 .overall = TRUE)\n\nards\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngroup1\ngroup1_level\nvariable\nvariable_level\ncontext\nstat_name\nstat_label\nstat\nfmt_fn\nwarning\nerror\n\n\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nmean\nMean\n31.33333\n1\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nsd\nSD\n5.259911\n1\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nmedian\nMedian\n31\n0\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\np25\nQ1\n27\n1\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\np75\nQ3\n36\n1\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nmin\nMin\n24\n0\nNULL\nNULL\n\n\nARM\n1\nAGE\nNULL\ncontinuous\nmax\nMax\n40\n0\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nmean\nMean\n35.06667\n1\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nsd\nSD\n9.027471\n1\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nmedian\nMedian\n35\n0\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\np25\nQ1\n26\n1\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\np75\nQ3\n40\n1\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nmin\nMin\n24\n0\nNULL\nNULL\n\n\nARM\n2\nAGE\nNULL\ncontinuous\nmax\nMax\n57\n0\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nmean\nMean\n36.6\n1\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nsd\nSD\n6.445375\n1\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nmedian\nMedian\n35\n0\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\np25\nQ1\n34\n1\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\np75\nQ3\n40\n1\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nmin\nMin\n24\n0\nNULL\nNULL\n\n\nARM\n3\nAGE\nNULL\ncontinuous\nmax\nMax\n49\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nmean\nMean\n34.33333\n1\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nsd\nSD\n7.276987\n1\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nmedian\nMedian\n34\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\np25\nQ1\n28\n1\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\np75\nQ3\n40\n1\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nmin\nMin\n24\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGE\nNULL\ncontinuous\nmax\nMax\n57\n0\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n1\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n1\ncategorical\np\n%\n1\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n2\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nAGEGR1\n2\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n1\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n1\ncategorical\np\n%\n1\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n2\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nAGEGR1\n2\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n1\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n1\ncategorical\np\n%\n1\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n2\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nAGEGR1\n2\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n1\ncategorical\nn\nn\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n1\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n1\ncategorical\np\n%\n1\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n2\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n2\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nAGEGR1\n2\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nSEX\n1\ncategorical\nn\nn\n12\n0\nNULL\nNULL\n\n\nARM\n1\nSEX\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nSEX\n1\ncategorical\np\n%\n0.8\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nSEX\n2\ncategorical\nn\nn\n3\n0\nNULL\nNULL\n\n\nARM\n1\nSEX\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nSEX\n2\ncategorical\np\n%\n0.2\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nSEX\n1\ncategorical\nn\nn\n8\n0\nNULL\nNULL\n\n\nARM\n2\nSEX\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nSEX\n1\ncategorical\np\n%\n0.5333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nSEX\n2\ncategorical\nn\nn\n7\n0\nNULL\nNULL\n\n\nARM\n2\nSEX\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nSEX\n2\ncategorical\np\n%\n0.4666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nSEX\n1\ncategorical\nn\nn\n10\n0\nNULL\nNULL\n\n\nARM\n3\nSEX\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nSEX\n1\ncategorical\np\n%\n0.6666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nSEX\n2\ncategorical\nn\nn\n5\n0\nNULL\nNULL\n\n\nARM\n3\nSEX\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nSEX\n2\ncategorical\np\n%\n0.3333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n1\ncategorical\nn\nn\n30\n0\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n1\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n1\ncategorical\np\n%\n0.6666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n2\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n2\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nSEX\n2\ncategorical\np\n%\n0.3333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n1\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n1\ncategorical\np\n%\n0.1333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n2\ncategorical\nn\nn\n13\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n2\ncategorical\np\n%\n0.8666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n3\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n3\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n4\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nETHNIC\n4\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n1\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n1\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n2\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n2\ncategorical\np\n%\n1\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n3\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n3\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n4\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nETHNIC\n4\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n1\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n1\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n2\ncategorical\nn\nn\n13\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n2\ncategorical\np\n%\n0.8666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n3\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n3\ncategorical\np\n%\n0.1333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n4\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nETHNIC\n4\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n1\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n1\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n1\ncategorical\np\n%\n0.04444444\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n2\ncategorical\nn\nn\n41\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n2\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n2\ncategorical\np\n%\n0.9111111\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n3\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n3\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n3\ncategorical\np\n%\n0.04444444\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n4\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n4\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nETHNIC\n4\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nRACE\n1\ncategorical\nn\nn\n0\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n1\ncategorical\np\n%\n0\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nRACE\n2\ncategorical\nn\nn\n8\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n2\ncategorical\np\n%\n0.5333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nRACE\n3\ncategorical\nn\nn\n4\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n3\ncategorical\np\n%\n0.2666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n1\nRACE\n4\ncategorical\nn\nn\n3\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n1\nRACE\n4\ncategorical\np\n%\n0.2\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nRACE\n1\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n1\ncategorical\np\n%\n0.1333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nRACE\n2\ncategorical\nn\nn\n10\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n2\ncategorical\np\n%\n0.6666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nRACE\n3\ncategorical\nn\nn\n1\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n3\ncategorical\np\n%\n0.06666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n2\nRACE\n4\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n2\nRACE\n4\ncategorical\np\n%\n0.1333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nRACE\n1\ncategorical\nn\nn\n1\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n1\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n1\ncategorical\np\n%\n0.06666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nRACE\n2\ncategorical\nn\nn\n8\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n2\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n2\ncategorical\np\n%\n0.5333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nRACE\n3\ncategorical\nn\nn\n4\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n3\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n3\ncategorical\np\n%\n0.2666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nARM\n3\nRACE\n4\ncategorical\nn\nn\n2\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n4\ncategorical\nN\nN\n15\n0\nNULL\nNULL\n\n\nARM\n3\nRACE\n4\ncategorical\np\n%\n0.1333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n1\ncategorical\nn\nn\n3\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n1\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n1\ncategorical\np\n%\n0.06666667\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n2\ncategorical\nn\nn\n26\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n2\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n2\ncategorical\np\n%\n0.5777778\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n3\ncategorical\nn\nn\n9\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n3\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n3\ncategorical\np\n%\n0.2\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n4\ncategorical\nn\nn\n7\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n4\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nRACE\n4\ncategorical\np\n%\n0.1555556\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nARM\n1\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n1\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n1\ncategorical\np\n%\n0.3333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nARM\n2\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n2\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n2\ncategorical\np\n%\n0.3333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL\n\n\nNA\nNULL\nARM\n3\ncategorical\nn\nn\n15\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n3\ncategorical\nN\nN\n45\n0\nNULL\nNULL\n\n\nNA\nNULL\nARM\n3\ncategorical\np\n%\n0.3333333\nfunction (x) , {, res &lt;- ifelse(is.na(x), NA_character_, str_trim(format(round5(x * , scale, digits = digits), nsmall = digits))), if (!is.null(width)) {, res &lt;- ifelse(nchar(res) &gt;= width | is.na(res), res, , paste0(strrep(” “, width - nchar(res)), res)), }, res, }\nNULL\nNULL",
    "crumbs": [
      "ard-catalog",
      "Demographics Table"
    ]
  }
]